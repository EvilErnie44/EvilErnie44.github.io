{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.scss","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/filterdata.pipe.ts","webpack:///./src/app/posts/posts.component.html","webpack:///./src/app/posts/posts.component.scss","webpack:///./src/app/posts/posts.component.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.scss","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","//This file has been created as the routing selection has been selected on project initialisation.\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n//To route you must first import the components which you want to route between.\nimport { UsersComponent } from './users/users.component';\nimport { DetailsComponent } from './details/details.component';\nimport { PostsComponent } from './posts/posts.component';\n\n//Define tthe routes between components in the routes array.\nconst routes: Routes = [\n{\n  //This is the path that loads when the app loads.\n  path: '',\n  //Which component is associated with the path defined.\n  //In this instance the first path to be rendered on load is the Users Component.\n  component: UsersComponent,\n},\n{\n  //This is a URL param, with the undefined until click, then ID value is passed in.\n  //This is the route the params are captured from. \n  path: 'details/:id',\n  component: DetailsComponent,\n},\n{\n  //path defined fo posts and associated with the posts component for the router ouput. \n  path: 'posts',\n  component: PostsComponent,\n},\n\n];\n\n//Ngmodule compiler, imports to routes with passed in route. \n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  //exports the contents to the routermodule to be rendered in router outlet. \n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div id = \\\"container\\\">\\n <app-sidebar> </app-sidebar>\\n\\n <div id = \\\"content\\\">\\n   <router-outlet></router-outlet>\\n </div>\\n \\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","//When you use the angular CLI to generate components it generates files.\n//These are the app.component.ts, app.module.ts, app.component.html, app.component.styles which in my case\n//is scss. Also a spec file is generated, this is to be used for testing purposes.\n\nimport { Component } from '@angular/core';\n\n//Object with associated value pairs.\n//It references the components required files/templates.\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n//Logic of the component.\nexport class AppComponent {\n  title = 'users';\n}\n","//Whenever using the angular CLI to create components and services this file will be\n//updated to reflect the update to the @NgModule decorator.\n\n//Components are added to the declarations array.\n\n//Required imports are contained the import array. E.g HTTP services, Animations, ect.\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { UsersComponent } from './users/users.component';\nimport { DetailsComponent } from './details/details.component';\n\n//importing the http module for use as import in the APP.\nimport { HttpClientModule } from '@angular/common/http';\nimport { FilterdataPipe } from './filterdata.pipe';\n//required for custom filter pipe and use of ngModel;\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SidebarComponent,\n    PostsComponent,\n    UsersComponent,\n    DetailsComponent,\n    FilterdataPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//A service provides access to reusable code which our components may require throughout the project.\n//A service is agnostic to a components structure and this allows greater seperation of concerns.\n\n//EG - Using a service to retrieve data from an API or DB which components then use to template HTML content.\nimport { Injectable } from '@angular/core';\n//Importing te angular HTTP Client\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n//Class which exports the service to the APP.\n//We will import this class into the components when required.\nexport class DataService {\n\n  //Utilising the HTTP client import Class\n  //HTTP Client request expects JSON return data as default, their is no need to parse JSON anymore.\n  constructor(private http: HttpClient) {}\n\n  //Custom Method to return Users collection from the web API.\n  getUsers(){\n    //single line return statement.\n    //return this.http.get('https://rundistance.azurewebsites.net/api/RunnerService')\n    return this.http.get('https://jsonplaceholder.typicode.com/users')\n  }\n  //Function to return the detail of a single user, passing in the ID prop of currently selected target of objects master layer.\n  //This no longer works since the API structure has changed. \n  getUser(userId){\n    //single line return statement getting target object from API.\n    //return this.http.get('https://rundistance.azurewebsites.net/api/RunnerService/'+userId)\n    return this.http.get('https://jsonplaceholder.typicode.com/users/'+userId)\n  }\n  //Returning posts from API.\n  getPosts(){\n    //single line return statement.\n    return this.http.get('https://jsonplaceholder.typicode.com/posts')\n  }\n}\n","module.exports = \"<h1> {{user.name}} </h1>\\n\\n<ul>\\n<li><strong>Username: </strong>{{ user.name}}</li>\\n<li><strong>Email: </strong>{{ user.email }}</li>\\n<li><strong>Phone: </strong>{{ user.phone }}</li>\\n<li><strong>Website: </strong>{{ user.website }}</li>\\n</ul>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n//Import data service for component to consume.\nimport { DataService } from '../data.service';\n//Allows you add CSS class when links route becomes active.\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.scss']\n})\n\nexport class DetailsComponent implements OnInit {\n\n  //Variable type object.\n  user: Object;\n\n  //passing in both the DataService and ActivatedRoute into the contrutor.\n  constructor(private data: DataService, private route: ActivatedRoute) {\n    //constructing the URL from the current route paramater and adding the target id via data binding.\n    this.route.params.subscribe( params => this.user = params.id)\n    //The route params returns a BehaviourSubject, we use the id from the data subject to access its master details.\n  }\n\n\n  ngOnInit() {\n    //calling method to get user from the service and passing the ID in.\n    this.data.getUser(this.user).subscribe(\n      //databinding the returned data.\n      data => this.user = data\n    )\n  }\n\n\n}\n","//Importing the pipe and pipe transform modules from angular core.\nimport { Pipe, PipeTransform } from '@angular/core';\n\n//declaring the association of name for filter data with the pipe in the HTML Templating.\n@Pipe({\n  name: 'filterdata'\n})\n\n//sorting fucntion for the filter pipe which implments the pipe transform module which has been imported.\nexport class FilterdataPipe implements PipeTransform {\n\n  //tranform function passin int he array of items, the value of the search element and defines the array type as any.\n  transform(items: any[], value: string, label:string): any[] {\n    //if no items are passed in return an emtpy object.\n    if (!items) return [];\n    //If not value is passed in then return the unchanged items object.\n    if (!value) return  items;\n    //If the value is equal to nonthing or the value is nul return empty array.\n    if (value == '' || value == null) return [];\n    //Otherwise, use filter method on the items array and run an ES function which iterates over the collection.\n    //the filter function matchs the contents of the label to the object which is being passed in which in this case items array.\n    //You can console log the object to discern what properties you are assessingwhich is how I got the filter pipe to work.\n    return items.filter(e => e[label].toLowerCase().indexOf(value) > -1 );\n  }\n\n}\n","module.exports = \"<h1>Posts</h1>\\n\\n<ul>\\n  <li *ngFor = \\\"let post of posts\\\">\\n\\n    <ul>\\n      <li><strong>{{ post.title }}</strong></li>\\n      <li>{{ post.body }}</li>\\n    </ul>\\n\\n  </li>\\n</ul>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\n//RXJS will hold the data which is returned from the API...\n//RESEARCH RXJS\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n\n  posts: Object;\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n    this.data.getPosts().subscribe(\n      //returning the user data via single line function\n      //pssing the data value into the function.\n      data => this.posts = data\n    );\n  }\n\n}\n","module.exports = \"<nav>\\n  <ul>\\n    <li>\\n     <a routerLink = \\\"\\\">\\n       <i class = \\\"material-icons\\\">supervised_user_circle</i>\\n     </a>\\n    </li>\\n    <li>\\n     <a routerLink = \\\"posts\\\">\\n       <i class = \\\"material-icons\\\">message</i>\\n     </a>\\n    </li>\\n  </ul>\\n</nav>\\n\"","module.exports = \"nav {\\n  background: rgba(87, 87, 87, 0.48);\\n  height: 100%; }\\n  nav ul {\\n    list-style-type: none;\\n    padding: 0;\\n    margin: 0;\\n    display: flex; }\\n  nav ul li a {\\n      color: #fff;\\n      padding: 20px;\\n      display: block; }\\n  nav ul li .activated {\\n      background-color: #00a8ff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lkZWJhci9DOlxcVXNlcnNcXFNpXFxEZXNrdG9wXFxSdW5uZXJzIC0gTmdOZXdBUEkvc3JjXFxhcHBcXHNpZGViYXJcXHNpZGViYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQ0FBK0I7RUFDL0IsYUFBWSxFQXFCZjtFQXZCRDtJQUtRLHNCQUFxQjtJQUNyQixXQUFVO0lBQ1YsVUFBUztJQUNULGNBQWEsRUFjaEI7RUF0Qkw7TUFhZ0IsWUFBVztNQUNYLGNBQWE7TUFDYixlQUFjLEVBQ2pCO0VBaEJiO01BbUJnQiwwQkFBeUIsRUFDNUIiLCJmaWxlIjoic3JjL2FwcC9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuYXYge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSg4Nyw4Nyw4NywwLjQ4KTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICB1bCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICAgIGxpIHtcclxuXHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC5hY3RpdmF0ZWQge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYThmZjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>Runners</h1>\\n\\n<div>\\n<input type=\\\"text\\\" [(ngModel)]=\\\"queryString\\\" placeholder = \\\"Search Runner Name\\\">\\n</div>\\n\\n\\n<ul>\\n  <li *ngFor = \\\"let user of users | filterdata: queryString : 'name' ; let i = index\\\">\\n\\n    <a routerLink = \\\"/details/{{ user.id }}\\\">{{ user.name }} </a>\\n\\n    <ul>\\n      <li><strong>Runner ID: {{ user.id }}</strong></li>\\n    </ul>\\n\\n  </li>\\n</ul>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n//Importing my users service, up one level in project structure from here.\nimport { DataService } from '../data.service';\nimport { Observable } from 'rxjs';\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\n\n//Export class implenets OnInit.\nexport class UsersComponent implements OnInit {\n\n  //Prop which holds returned API data\n  //of type obect.\n  users: any;\n\n  //Creating instance of the service via dependancy injection.\n  constructor(private data: DataService) { }\n\n  //NG on init is one of the \"lifecycle hooks\" for angular components.\n  //Code in here will be executed when the component loads for ngOnInit.\n  ngOnInit() {\n    //Executing the method which is provided by the service.\n    //Adding data bind via subscribe.\n    this.data.getUsers().subscribe(\n      //returning the user data via single line return function\n      //passing the data value into the function.\n      (data) => {\n      //assinging the data to the user object.\n      this.users = data\n      //sorting the users object by runner ID.\n      //this.users.sort((a,b) => a.RunnerId - b.RunnerId);\n      }\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}